name: CI Pipeline

on:
  push:
    branches:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ap-southeast-2
      AWS_PROFILE: dev
    steps:
      - uses: actions/checkout@v2
      - run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV
      - run: |
          if [ "${{ env.BRANCH_NAME }}" == "test" ]; then
            echo "AWS_DEPLOY_STAGE_ENVIRONMENT=test" >> $GITHUB_ENV
          elif [ "${{ env.BRANCH_NAME }}" == "develop" ]; then
            echo "AWS_DEPLOY_STAGE_ENVIRONMENT=dev" >> $GITHUB_ENV
          elif [ "${{ env.BRANCH_NAME }}" == "staging" ]; then
            echo "AWS_DEPLOY_STAGE_ENVIRONMENT=staging" >> $GITHUB_ENV
          elif [ "${{ env.BRANCH_NAME }}" == "master" ]; then
            echo "AWS_DEPLOY_STAGE_ENVIRONMENT=root" >> $GITHUB_ENV
          else
            echo "AWS_DEPLOY_STAGE_ENVIRONMENT=unknown" >> $GITHUB_ENV
          fi
      - run: |
          sudo apt-get update
          sudo apt-get install -y dos2unix
          git submodule update --init --recursive
          dos2unix install.sh
          chmod +x install.sh
          ./install.sh
      - uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: 'your-channel-name'
          SLACK_COLOR: '#FFFF00'
          SLACK_TITLE: "Build starting for platform-manual-services"
          SLACK_MESSAGE: "Build ${{ github.run_number }} is STARTING. :rocket: View Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
      - run: sudo sh scripts/iot-fleet-indexing-config.sh
        env:
          AWS_REGION: ${{ env.AWS_REGION }}
          AWS_PROFILE: ${{ env.AWS_PROFILE }}
      - run: npm install -g serverless
      - run: |
          sls plugin install -n serverless-prune-plugin --stage ${{ env.AWS_DEPLOY_STAGE_ENVIRONMENT }}
          sls prune --stage ${{ env.AWS_DEPLOY_STAGE_ENVIRONMENT }} -n 50
          sls -v
          sls deploy --stage ${{ env.AWS_DEPLOY_STAGE_ENVIRONMENT }} --force

  notify:
    runs-on: ubuntu-latest
    needs: build
    if: success()
    steps:
      - uses: rtCamp/action-slack-notify@v2
        with:
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
          color: '#00FF00'
          status: 'Success'
          fields: 'repo,commit,author,action'
          title: "Deploy ${{ github.run_number }} SUCCESS"
          message: "Build ${{ github.run_number }} completed successfully. View Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

  notify2:
    runs-on: ubuntu-latest
    needs: build
    if: failure()
    steps:
      - uses: rtCamp/action-slack-notify@v2
        with:
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
          color: '#FF0000'
          status: 'Failure'
          fields: 'repo,commit,author,action'
          title: "Deploy ${{ github.run_number }} FAILED"
          message: "Build ${{ github.run_number }} failed. View Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
