name: CI Pipeline

on:
  push:
    branches:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SLACK_CHANNEL: 'Laxmi Prasanna'
      AWS_REGION: eu-west-1
      AWS_PROFILE: dev
          
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Extract branch name
        id: extract_branch
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV

      - name: Set Environment Stage
        run: |
          if [ "${{ env.BRANCH_NAME }}" == "test" ]; then
            echo "AWS_DEPLOY_STAGE_ENVIRONMENT=test" >> $GITHUB_ENV
          elif [ "${{ env.BRANCH_NAME }}" == "develop" ]; then
            echo "AWS_DEPLOY_STAGE_ENVIRONMENT=dev" >> $GITHUB_ENV
          elif [ "${{ env.BRANCH_NAME }}" == "staging" ]; then
            echo "AWS_DEPLOY_STAGE_ENVIRONMENT=staging" >> $GITHUB_ENV
          elif [ "${{ env.BRANCH_NAME }}" == "master" ]; then
            echo "AWS_DEPLOY_STAGE_ENVIRONMENT=root" >> $GITHUB_ENV
          else
            echo "AWS_DEPLOY_STAGE_ENVIRONMENT=unknown" >> $GITHUB_ENV
          fi    
      - name: Prepare Dependencies
        run: |
          sudo apt-get update
          # sudo apt-get install -y dos2unix
          git submodule update --init --recursive
          # dos2unix install.sh
          chmod +x install.sh
          bash install.sh

      - name: Send Notification to Slack
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: '#FFFF00'
          SLACK_TITLE: "Build starting for platform-manual-services"
          SLACK_MESSAGE: "Build ${{ github.run_number }} for platform-manual-services is STARTING. :rocket: View Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          SLACK_CHANNEL: ${{ env.SLACK_CHANNEL }}
          AWS_REGION: eu-west-1
          AWS_DEPLOY_STAGE_ENVIRONMENT: ${{ env.BRANCH_NAME }}
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install Serverless Framework
        run: npm install -g serverless
      - name: Deploy
        run: |
          sls plugin install -n serverless-prune-plugin --stage ${{ env.AWS_DEPLOY_STAGE_ENVIRONMENT }}
          sls prune --stage ${{ env.AWS_DEPLOY_STAGE_ENVIRONMENT }} -n 50
          sls -v
          sls deploy --stage ${{ env.AWS_DEPLOY_STAGE_ENVIRONMENT }} --force

      - name: Send Notification to Slack (Success)
        if: success()
        uses: rtCamp/action-slack-notify@v2
        with:
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
          color: '#00FF00'
          status: 'Success'
          fields: 'repo,commit,author,action'
          title: "Deploy ${{ github.run_number }} for platform-manual-services SUCCESS"
          message: "Build ${{ github.run_number }} for platform-manual-services completed successfully. View Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

      - name: Send Notification to Slack (Failure)
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        with:
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
          color: '#FF0000'
          status: 'Failure'
          fields: 'repo,commit,author,action'
          title: "Deploy ${{ github.run_number }} for platform-manual-services FAILED"
          message: "Build ${{ github.run_number }} for platform-manual-services failed. View Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
